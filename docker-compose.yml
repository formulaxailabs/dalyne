version: "3"

services:
  dalyne-backend:
    build:
      context: .
    # command: gunicorn --workers=4 --threads=4 --timeout 600 --bind 0.0.0.0:8000 app.wsgi:application
    command: python manage.py runserver 0.0.0.0:8000
    image: dalyne-backend
    expose:
      - 8000
    volumes:
      - ./dalyne:/dalyne
      - static_volume:/dalyne/static
    env_file:
      - ./.env
    networks:
      - nginx_network
      - database_network
      - redis_network
    depends_on:
      - dalyne-db
  dalyne-db:
    image: postgres:12.3
    env_file:
      - ./.env.db
    networks:
      - database_network
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:6.0.3-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - redis_network
    
  # celery_worker:
  #   build: .
  #   command: celery -A dalyne worker --loglevel=info --logfile=logs/celery.log
  #   env_file:
  #     - ./.env
  #   links:
  #     - dalyne-db
  #     - redis
  #   depends_on:
  #     - dalyne-db
  #     - dalyne-backend
  #     - redis
  #   networks:
  #     - database_network
  #     - redis_network

  # celery_beat:
  #   build: .
  #   command: celery -A dalyne beat --loglevel=info --logfile=logs/celery.log
  #   env_file:
  #     - ./.env
  #   links:
  #     - dalyne-db
  #     - redis
  #   depends_on:
  #     - dalyne-db
  #     - dalyne-backend
  #     - redis
  #   networks:
  #     - database_network
  #     - redis_network

  nginx:
    build: ./nginx
    environment:
      - DJANGOAPP=http://dalyne-backend:8000
    volumes:
      - static_volume:/backend/static
    ports:
      - 8089:80
    depends_on:
      - dalyne-backend
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge
  database_network:
    driver: bridge
  redis_network:
    driver: bridge
  
volumes:
  db_data:
  static_volume:
